name: release

on:
  workflow_dispatch: ~

permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  JOB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      agent-version: ${{ steps.bootstrap.outputs.agent-version }}
      major-version: ${{ steps.bootstrap.outputs.major-version }}

    steps:
      - uses: actions/checkout@v4
      - name: Bootstrap Action Workspace
        id: bootstrap
        uses: ./.github/workflows/bootstrap
        with:
          rust: 'true'

  post-release:
    needs: [ 'release']
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GIT_TAG: v${{ needs.release.outputs.agent-version }}
      NEW_BRANCH: update/${{ needs.release.outputs.agent-version }}
      TARGET_BRANCH: ${{ needs.release.outputs.major-version }}.x

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup git config
        uses: elastic/apm-pipeline-library/.github/actions/setup-git@current

      - name: Create GitHub Pull Request if minor release.
        run: |
          echo "as long as there is a major.x branch"
          existed_in_local=$(git ls-remote --heads origin ${TARGET_BRANCH})
          if [ -z "${existed_in_local}" ]; then
            echo -e "::warning::Target branch '${TARGET_BRANCH}' does not exist."
            exit 0
          fi
          git checkout $TARGET_BRANCH
          git checkout -b ${NEW_BRANCH}
          git format-patch -k --stdout ${TARGET_BRANCH}...origin/main -- docs CHANGELOG.asciidoc | git am -3 -k
          git push origin ${NEW_BRANCH}
          gh pr create \
            --title "post-release: ${GIT_TAG}" \
            --body "Generated automatically with ${JOB_URL}" \
            --head "v1v:${NEW_BRANCH}" \
            --base "$TARGET_BRANCH" \
            --repo "${{ github.repository }}"

      - name: Create branch if major release
        run: |
          echo "as long as there is no a major.x branch"
          existed_in_local=$(git ls-remote --heads origin ${TARGET_BRANCH})
          if [ -n "${existed_in_local}" ]; then
            echo -e "::warning::Target branch '${TARGET_BRANCH}' does exist."
            exit 0
          fi
          git branch -D $TARGET_BRANCH
          git push origin $TARGET_BRANCH
